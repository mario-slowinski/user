---
- name: "Create authorized keys directory"
  tags: user.sshkeys.directory
  ansible.builtin.file:
    path: "{{ item[1]['path'] | dirname }}"
    state: directory
    owner: "{{ item[1]['owner'] | default(omit) }}"
    group: "{{ item[1]['group'] | default(omit) }}"
    mode: "{{ item[1]['mode'] | default(omit) }}"
    setype: "{{ item[1]['setype'] | default(omit) }}"
  loop: "{{ user_accounts | subelements('authorized_keys', skip_missing=True) }}"
  loop_control:
    label: "{{ item[0]['name'] }}"
  when: item[1]['path'] is defined

- name: "Manage ssh public key in authorized keys"
  tags: user.sshkeys.authorized
  ansible.posix.authorized_key:
    key:
      "{% if item[1]['key'] is match('ssh-.+') %}\
      {{ item[1]['key'] }}\
      {% else %}\
      {{ lookup('file', item[1]['key'], errors='ignore') }}\
      {% endif %}"
    user: "{{ item[0]['name'] }}"
    manage_dir: "{{ item[1]['manage_dir'] | default(omit, true) }}"
    path: "{{ item[1]['path'] | default(omit, true) }}"
    state: "{{ item[1]['state'] | default(omit, true) }}"
  loop: "{{ user_accounts | subelements('authorized_keys', skip_missing=True) }}"
  loop_control:
    label: "{{ item[0]['name'] }}"

- name: "Copy ssh keys"
  tags: user.sshkeys.private
  ansible.builtin.copy:
    src: "{{ item[1] }}"
    dest: "~{{ item[0]['name'] }}/.ssh/{{ item[1] | basename }}"
    owner: "{{ item[0]['name'] }}"
    group: "{{ item[0]['group'] | default(omit) }}"
    mode: preserve
  loop: "{{ user_accounts | subelements('ssh_keys', skip_missing=True) }}"
  loop_control:
    label: "{{ item[0]['name'] }} {{ item[1] }}"
